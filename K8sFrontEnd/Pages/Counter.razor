@page "/counter"
@using K8sFrontEnd.Services
@inject HTTPReqService _httpService
@using K8sFrontEnd.Data
@using Dapr.Client
@using Newtonsoft.Json

<h1>Counter</h1>

<p>Current Message: @returnedstring</p>

<button class="btn btn-primary" @onclick="CallBackendAsync">HTTP Call</button>

<p>Current gRPC Message: @daprgRPCstring</p>

<button class="btn btn-primary" @onclick="CallDaprBackendgRPCAsync">gRPC Call</button>

@code {
    private string returnedstring = "click button to call backend";
    private DaprClient client;
    private string daprgRPCstring;

    protected override void OnInitialized()
    {
        client = new DaprClientBuilder().Build();
    }
    private async Task CallBackendAsync()
    {
        returnedstring = await _httpService.CallApiAsync("http://localhost:3500/v1.0/invoke/k8sbackend/method/WeatherForecast");
    }

    private async Task CallDaprBackendgRPCAsync()
    {
        // Add the verb to metadata if the method is other than a POST
        var metaData = new Dictionary<string, string>();
        metaData.Add("http.verb", "GET");
        IEnumerable<WeatherForecast> forecast = await client.InvokeMethodAsync<IEnumerable<WeatherForecast>>("k8sbackend", "WeatherForecast", metaData);
        daprgRPCstring = JsonConvert.SerializeObject(forecast);
    }
    
}
